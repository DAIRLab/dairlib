# -*- python -*-
load("@drake//tools/install:install.bzl", "install")

package(default_visibility = ["//visibility:public"])

load(
    "@drake//tools/skylark:pybind.bzl",
    "drake_pybind_library",
    "get_drake_py_installs",
    "get_pybind_package_info",
    "pybind_py_library",
)

pybind_py_library(
    name = "lcm_trajectory_py",
    cc_deps = [
        "//lcm:dircon_trajectory_saver",
        "//lcm:lcm_trajectory_saver",
        "@drake//:drake_shared_library",
    ],
    cc_so_name = "lcm_trajectory",
    cc_srcs = ["lcm_trajectory_py.cc"],
    py_deps = ["@drake//bindings/pydrake"],
    py_imports = ["."],
)

py_binary(
    name = "lcm_trajectory_plotter",
    srcs = ["lcm_trajectory_plotter.py"],
    deps = [
        ":lcm_trajectory_py",
        ":module_py",
        "//lcmtypes:lcmtypes_robot_py",
    ],
)

py_binary(
    name = "dircon_trajectory_plotter",
    srcs = ["dircon_trajectory_plotter.py"],
    deps = [
        ":lcm_trajectory_py",
        ":module_py",
        "//bindings/pydairlib/common",
        "//bindings/pydairlib/multibody:multibody_py",
        "//lcmtypes:lcmtypes_robot_py",
    ],
)

py_library(
    name = "process_lcm_log_py",
    srcs = ["analysis_scripts/process_lcm_log.py"],
    deps = [
        ":module_py",
        "//lcmtypes:lcmtypes_robot_py",
    ],
)

py_library(
    name = "process_log_py",
    srcs = ["analysis_scripts/process_log.py"],
    deps = [
        ":module_py",
        "//lcmtypes:lcmtypes_robot_py",
    ],
)

py_library(
    name = "load_lcm_logs",
    srcs = ["analysis_scripts/load_lcm_trajs.py"],
    deps = [
        ":module_py",
        "//lcmtypes:lcmtypes_robot_py",
    ],
)

py_binary(
    name = "cassie_log_plotter",
    srcs = ["analysis_scripts/cassie_log_plotter.py"],
    data = [
        "//examples/Cassie:cassie_urdf",
        "@lcm//:lcm-python",
    ],
    deps = [
        ":lcm_trajectory_py",
        ":module_py",
        ":process_lcm_log_py",
        "//bindings/pydairlib/common",
        "//bindings/pydairlib/multibody:multibody_py",
        "//lcmtypes:lcmtypes_robot_py",
    ],
)

py_binary(
    name = "log_plotter_cassie",
    srcs = ["analysis_scripts/log_plotter_cassie.py"],
    data = [
        "//examples/Cassie:cassie_urdf",
        "@lcm//:lcm-python",
    ],
    deps = [
        ":lcm_trajectory_py",
        ":module_py",
        ":process_lcm_log_py",
        "//bindings/pydairlib/cassie:cassie_utils_py",
        "//bindings/pydairlib/common",
        "//bindings/pydairlib/multibody:kinematic_py",
        "//bindings/pydairlib/multibody:multibody_py",
        "//lcmtypes:lcmtypes_robot_py",
    ],
)

py_binary(
    name = "walking_analysis",
    srcs = ["analysis_scripts/walking_analysis.py"],
    data = [
        "//examples/Cassie:cassie_urdf",
        "@lcm//:lcm-python",
    ],
    deps = [
        ":lcm_trajectory_py",
        ":load_lcm_logs",
        ":module_py",
        ":process_lcm_log_py",
        "//bindings/pydairlib/common",
        "//bindings/pydairlib/multibody:multibody_py",
        "//lcmtypes:lcmtypes_robot_py",
    ],
)

py_binary(
    name = "model_comparison",
    srcs = ["analysis_scripts/model_comparison.py"],
    data = [
        "@lcm//:lcm-python",
    ],
    deps = [
        ":lcm_trajectory_py",
        ":module_py",
        ":process_lcm_log_py",
        "//bindings/pydairlib/cassie:cassie_utils_py",
        "//bindings/pydairlib/common",
        "//bindings/pydairlib/multibody:multibody_py",
        "//lcmtypes:lcmtypes_robot_py",
    ],
)

py_binary(
    name = "estimate_spring_stiffness",
    srcs = ["analysis_scripts/estimate_spring_stiffness.py"],
    data = [
        "@lcm//:lcm-python",
    ],
    deps = [
        ":lcm_trajectory_py",
        ":module_py",
        ":process_lcm_log_py",
        "//bindings/pydairlib/cassie:cassie_utils_py",
        "//bindings/pydairlib/common",
        "//bindings/pydairlib/multibody:kinematic_py",
        "//bindings/pydairlib/multibody:multibody_py",
        "//lcmtypes:lcmtypes_robot_py",
    ],
)

py_binary(
    name = "estimate_damping",
    srcs = ["analysis_scripts/estimate_damping.py"],
    data = [
        "@lcm//:lcm-python",
    ],
    deps = [
        ":lcm_trajectory_py",
        ":module_py",
        ":process_lcm_log_py",
        "//bindings/pydairlib/cassie:cassie_utils_py",
        "//bindings/pydairlib/common",
        "//bindings/pydairlib/multibody:kinematic_py",
        "//bindings/pydairlib/multibody:multibody_py",
        "//lcmtypes:lcmtypes_robot_py",
    ],
)

py_binary(
    name = "invariant_impacts",
    srcs = ["analysis_scripts/invariant_impacts.py"],
    data = [
        "@lcm//:lcm-python",
    ],
    deps = [
        ":lcm_trajectory_py",
        ":module_py",
        ":plot_styler",
        ":process_lcm_log_py",
        ":process_log_py",
        "//bindings/pydairlib/cassie:cassie_utils_py",
        "//bindings/pydairlib/common",
        "//bindings/pydairlib/multibody:kinematic_py",
        "//bindings/pydairlib/multibody:multibody_py",
        "//lcmtypes:lcmtypes_robot_py",
    ],
)

py_binary(
    name = "plot_styler",
    srcs = ["parameter_studies/plot_styler.py"],
    deps = [
        "//lcmtypes:lcmtypes_robot_py",
    ],
)

py_binary(
    name = "invariant_impacts_plotter",
    srcs = ["parameter_studies/invariant_impacts_plotter.py"],
    data = [
        "@lcm//:lcm-python",
    ],
    deps = [
        ":lcm_trajectory_py",
        ":module_py",
        ":plot_styler",
        ":process_lcm_log_py",
        ":process_log_py",
        "//bindings/pydairlib/cassie:cassie_utils_py",
        "//bindings/pydairlib/common",
        "//bindings/pydairlib/multibody:kinematic_py",
        "//bindings/pydairlib/multibody:multibody_py",
        "//lcmtypes:lcmtypes_robot_py",
    ],
)

py_binary(
    name = "run_parameter_study",
    srcs = ["parameter_studies/run_parameter_study.py"],
    data = [
        "@lcm//:lcm-python",
    ],
    deps = [
        ":lcm_trajectory_py",
        ":module_py",
        ":process_lcm_log_py",
        ":process_log_py",
        "//bindings/pydairlib/cassie:cassie_utils_py",
        "//bindings/pydairlib/common",
        "//bindings/pydairlib/multibody:kinematic_py",
        "//bindings/pydairlib/multibody:multibody_py",
        "//lcmtypes:lcmtypes_robot_py",
    ],
)

# This determines how `PYTHONPATH` is configured, and how to install the
# bindings.
PACKAGE_INFO = get_pybind_package_info("//bindings")

py_library(
    name = "module_py",
    srcs = [
        "__init__.py",
    ],
    imports = PACKAGE_INFO.py_imports,
    deps = [
    ],
)

PY_LIBRARIES = [
    ":module_py",
    ":lcm_trajectory_py",
    "//bindings/pydairlib/common",
    "//bindings/pydairlib/multibody",
]

# Package roll-up (for Bazel dependencies).
py_library(
    name = "pydairlib",
    visibility = ["//visibility:public"],
    deps = PY_LIBRARIES,
)
