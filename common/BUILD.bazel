package(default_visibility = ["//visibility:public"])

cc_library(
    name = "common",
    deps = [
        ":blending_utils",
        ":discrete_time_filter",
        ":eigen_utils",
        ":file_utils",
        ":find_resource",
        "@drake//:drake_shared_library",
    ],
)

cc_library(
    name = "find_resource",
    srcs = ["find_resource.cc"],
    hdrs = [
        "find_resource.h",
    ],
    deps = [
        "//third_party/spruce",
        "@drake//:drake_shared_library",
    ],
)

cc_library(
    name = "polynomial_utils",
    srcs = ["legendre.cc"],
    hdrs = [
        "legendre.h",
        "polynomial_utils.h",
    ],
    deps = [
        "@boost//:math",
        "@drake//:drake_shared_library",
        "@eigen",
    ],
)

cc_library(
    name = "legendre_polynomial_trajectory",
    srcs = ["legendre_polynomial_trajectory.cc"],
    hdrs = ["legendre_polynomial_trajectory.h"],
    deps = [
        ":polynomial_utils",
        "@drake//:drake_shared_library"
    ],
)

cc_library(
    name = "eigen_utils",
    srcs = ["eigen_utils.cc"],
    hdrs = [
        "eigen_utils.h",
    ],
    deps = [
        "@drake//:drake_shared_library",
    ],
)

cc_library(
    name = "file_utils",
    srcs = [
        "file_utils.cc",
    ],
    hdrs = [
        "file_utils.h",
    ],
    deps = [
        "@drake//:drake_shared_library",
    ],
)

cc_library(
    name = "blending_utils",
    srcs = [
        "blending_utils.cc",
    ],
    hdrs = [
        "blending_utils.h",
    ],
    deps = [
        "@drake//:drake_shared_library",
    ],
)

cc_library(
    name = "discrete_time_filter",
    srcs = [
        "discrete_time_filter.cc",
    ],
    hdrs = [
        "discrete_time_filter.h",
    ],
    deps = [
        "@drake//:drake_shared_library",
    ],
)

cc_library(
    name = "time_series_buffer",
    hdrs = ["time_series_buffer.h"],
    deps = [],
)

cc_binary(
    name = "test_legendre",
    srcs = ["test_legendre.cc"],
    deps = [
        ":polynomial_utils",
    ],
)
