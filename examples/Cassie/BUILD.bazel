load("@drake//tools/lint:lint.bzl", "add_lint_tests")

package(default_visibility = ["//visibility:public"])

load(
    "@drake//tools/skylark:drake_lcm.bzl",
    "drake_lcm_cc_library",
    "drake_lcm_java_library",
    "drake_lcm_py_library",
)
load(
    "@drake//tools/skylark:drake_py.bzl",
    "drake_py_binary",
    "drake_py_library",
    "drake_py_unittest",
)
load(
    "@drake//tools/skylark:pybind.bzl",
    "drake_pybind_library",
    "get_drake_py_installs",
    "get_pybind_package_info",
    "pybind_py_library",
)

cc_library(
    name = "cassie_utils",
    srcs = ["cassie_utils.cc"],
    hdrs = ["cassie_utils.h"],
    deps = [
        ":cassie_urdf",
        "//common",
        "//examples/Cassie/systems:cassie_encoder",
        "//examples/Cassie/systems:sim_cassie_sensor_aggregator",
        "//multibody:utils",
        "//multibody/kinematic",
        "//systems:robot_lcm_systems",
        "//systems/framework:geared_motor",
        "@drake//:drake_shared_library",
    ],
)

cc_library(
    name = "cassie_hardware",
    deps = [
        "//examples/Cassie:dispatcher_robot_in",
        "//examples/Cassie:dispatcher_robot_out",
        "//examples/Cassie:multibody_sim",
        "//examples/Cassie:run_controller_switch",
        "//examples/Cassie:run_osc_jumping_controller",
        "//examples/Cassie:run_osc_standing_controller",
        "//examples/Cassie:run_osc_walking_controller",
        "//examples/Cassie:run_osc_walking_controller_alip",
        "//examples/Cassie:run_pd_controller",
        "//examples/Cassie/osc",
    ],
)

cc_library(
    name = "cassie_urdf",
    data = glob(["urdf/**"]),
)

cc_library(
    name = "cassie_state_estimator",
    srcs = ["cassie_state_estimator.cc"],
    hdrs = ["cassie_state_estimator.h"],
    deps = [
        ":cassie_utils",
        "//examples/Cassie/datatypes:cassie_names",
        "//examples/Cassie/datatypes:cassie_out_t",
        "//multibody:utils",
        "//multibody/kinematic",
        "//systems/framework:vector",
        "@drake//:drake_shared_library",
        "@inekf//src:InEKF",
    ],
)

cc_binary(
    name = "run_udp_dummy_server",
    srcs = ["run_udp_dummy_server.c"],
    deps = [
        "//examples/Cassie/datatypes:cassie_out_t",
        "//examples/Cassie/datatypes:cassie_user_in_t",
    ],
)

cc_test(
    name = "input_supervisor_test",
    size = "small",
    srcs = ["test/input_supervisor_test.cc"],
    deps = [
        "//examples/Cassie:cassie_urdf",
        "//examples/Cassie:cassie_utils",
        "//examples/Cassie/systems:input_supervisor",
        "//systems/primitives",
        "@drake//:drake_shared_library",
        "@gtest//:main",
    ],
)

cc_library(
    name = "cassie_fixed_point_solver",
    srcs = ["cassie_fixed_point_solver.cc"],
    hdrs = ["cassie_fixed_point_solver.h"],
    deps = [
        ":cassie_urdf",
        ":cassie_utils",
        "//multibody:multibody_solvers",
        "//multibody:multipose_visualizer",
        "//solvers:constraints",
        "//solvers:optimization_utils",
        "@drake//:drake_shared_library",
    ],
)

cc_binary(
    name = "find_fixed_point",
    srcs = ["find_fixed_point.cc"],
    deps = [
        ":cassie_fixed_point_solver",
        "@gflags",
    ],
)

cc_binary(
    name = "find_initial_states",
    srcs = ["find_initial_states.cc"],
    deps = [
        ":cassie_fixed_point_solver",
        "@gflags",
    ],
)

cc_binary(
    name = "run_lqr_balancing",
    srcs = ["run_lqr_balancing.cc"],
    deps = [
        ":cassie_fixed_point_solver",
        ":cassie_urdf",
        ":cassie_utils",
        "//systems/controllers",
        "@gflags",
    ],
)

cc_binary(
    name = "run_pd_controller",
    srcs = ["run_pd_controller.cc"],
    deps = [
        ":cassie_urdf",
        ":cassie_utils",
        "//common",
        "//systems:robot_lcm_systems",
        "//systems/controllers",
        "//systems/controllers:pd_config_lcm",
        "@drake//:drake_shared_library",
        "@gflags",
    ],
)

cc_binary(
    name = "visualizer",
    srcs = ["visualizer.cc"],
    deps = [
        ":cassie_urdf",
        ":cassie_utils",
        "//multibody:utils",
        "//multibody:visualization_utils",
        "//systems:robot_lcm_systems",
        "//systems/primitives",
        "@drake//:drake_shared_library",
        "@gflags",
    ],
)

cc_binary(
    name = "run_simple_sim",
    srcs = ["run_simple_sim.cc"],
    deprecation = "Attic/RigidBodyTree is deprecated.",
    tags = ["manual"],
    deps = [
        ":cassie_urdf",
        ":cassie_utils",
        "//attic/multibody:multibody_solvers",
        "//systems:robot_lcm_systems",
        "//systems/primitives",
        "@drake//:drake_shared_library",
        "@gflags",
    ],
)

cc_binary(
    name = "standalone_multibody_sim",
    srcs = ["standalone_multibody_sim.cc"],
    deps = [
        ":cassie_urdf",
        ":cassie_utils",
        "@drake//:drake_shared_library",
        "@gflags",
    ],
)

cc_binary(
    name = "multibody_sim",
    srcs = ["multibody_sim.cc"],
    deps = [
        ":cassie_fixed_point_solver",
        ":cassie_urdf",
        ":cassie_utils",
        "//examples/Cassie/systems:cassie_encoder",
        "//solvers:optimization_utils",
        "//systems:robot_lcm_systems",
        "//systems:system_utils",
        "//systems/framework:vector",
        "//systems/primitives",
        "@drake//:drake_shared_library",
        "@gflags",
    ],
)

cc_binary(
    name = "multibody_sim_w_cam",
    srcs = ["multibody_sim_w_cam.cc"],
    deps = [
        ":cassie_fixed_point_solver",
        ":cassie_urdf",
        ":cassie_utils",
        "//examples/Cassie/systems:cassie_encoder",
        "//solvers:optimization_utils",
        "//systems:robot_lcm_systems",
        "//systems:system_utils",
        "//systems/cameras:camera_utils",
        "//systems/framework:vector",
        "//systems/primitives",
        "@drake//:drake_shared_library",
        "@gflags",
    ],
)

cc_binary(
    name = "multibody_sim_w_platform",
    srcs = ["multibody_sim_w_platform.cc"],
    deps = [
        ":cassie_fixed_point_solver",
        ":cassie_urdf",
        ":cassie_utils",
        "//lcm:trajectory_saver",
        "//multibody:utils",
        "//systems:robot_lcm_systems",
        "//systems/primitives",
        "@drake//:drake_shared_library",
        "@gflags",
    ],
)

cc_binary(
    name = "multibody_sim_w_ground_incline",
    srcs = ["multibody_sim_w_ground_incline.cc"],
    deps = [
        ":cassie_fixed_point_solver",
        ":cassie_urdf",
        ":cassie_utils",
        "//examples/Cassie/systems:cassie_encoder",
        "//solvers:optimization_utils",
        "//systems:robot_lcm_systems",
        "//systems/framework:vector",
        "//systems/primitives",
        "@drake//:drake_shared_library",
        "@gflags",
    ],
)

cc_binary(
    name = "parse_log_test",
    srcs = ["test/parse_log_test.cc"],
    deps = [
        ":cassie_urdf",
        ":cassie_utils",
        "//systems:robot_lcm_systems",
        "//systems/primitives:vector_aggregator",
        "@drake//:drake_shared_library",
    ],
)

cc_binary(
    name = "dispatcher_robot_out",
    srcs = ["dispatcher_robot_out.cc"],
    deps = [
        ":cassie_state_estimator",
        ":cassie_urdf",
        ":cassie_utils",
        "//examples/Cassie/networking:cassie_udp_pub_sub",
        "//lcmtypes:lcmt_robot",
        "//multibody:multibody_solvers",
        "//systems:robot_lcm_systems",
        "//systems/framework:lcm_driven_loop",
        "//systems/primitives",
        "@drake//:drake_shared_library",
        "@gflags",
    ],
)

cc_binary(
    name = "dispatcher_robot_in",
    srcs = ["dispatcher_robot_in.cc"],
    deps = [
        ":cassie_lcm_driven_loop",
        ":cassie_state_estimator",
        ":cassie_urdf",
        ":cassie_utils",
        "//examples/Cassie/networking:cassie_udp_pub_sub",
        "//examples/Cassie/systems:input_supervisor",
        "//lcmtypes:lcmt_robot",
        "//systems:robot_lcm_systems",
        "//systems/controllers:linear_controller",
        "//systems/controllers:pd_config_lcm",
        "@drake//:drake_shared_library",
        "@gflags",
    ],
)

cc_library(
    name = "cassie_lcm_driven_loop",
    srcs = [
    ],
    hdrs = [
        "cassie_lcm_driven_loop.h",
    ],
    deps = [
        "//lcmtypes:lcmt_robot",
        "@drake//:drake_shared_library",
    ],
)

cc_binary(
    name = "log_timing_test",
    srcs = ["test/log_timing_test.cc"],
    deps = [
        "//lcmtypes:lcmt_robot",
        "@drake//lcm",
        "@gflags",
    ],
)

cc_binary(
    name = "dispatcher_log_timing_test",
    srcs = ["test/dispatcher_log_timing_test.cc"],
    deps = [
        "//lcmtypes:lcmt_robot",
        "@drake//lcm",
        "@gflags",
    ],
)

cc_test(
    name = "cassie_state_estimator_test",
    size = "small",
    srcs = ["test/cassie_state_estimator_test.cc"],
    deps = [
        ":cassie_state_estimator",
        "//examples/Cassie:cassie_urdf",
        "//multibody:multibody_solvers",
        "@drake//:drake_shared_library",
        "@gtest//:main",
    ],
)

cc_binary(
    name = "run_osc_jumping_controller",
    srcs = ["run_osc_jumping_controller.cc"],
    deps = [
        ":cassie_urdf",
        ":cassie_utils",
        "//examples/Cassie/osc_jump",
        "//lcm:trajectory_saver",
        "//multibody:utils",
        "//systems:robot_lcm_systems",
        "//systems:system_utils",
        "//systems/framework:lcm_driven_loop",
        "//systems/primitives",
        "@drake//:drake_shared_library",
        "@gflags",
    ],
)

cc_binary(
    name = "run_osc_walking_controller",
    srcs = ["run_osc_walking_controller.cc"],
    deps = [
        ":cassie_urdf",
        ":cassie_utils",
        "//examples/Cassie/osc",
        "//examples/Cassie/systems:cassie_out_to_radio",
        "//examples/Cassie/systems:simulator_drift",
        "//multibody:utils",
        "//multibody:view_frame",
        "//multibody/kinematic",
        "//systems:robot_lcm_systems",
        "//systems/controllers:fsm_event_time",
        "//systems/filters:floating_base_velocity_filter",
        "//systems/framework:lcm_driven_loop",
        "//systems/primitives",
        "@drake//:drake_shared_library",
        "@gflags",
    ],
)

cc_binary(
    name = "run_osc_walking_controller_alip",
    srcs = ["run_osc_walking_controller_alip.cc"],
    deps = [
        ":cassie_urdf",
        ":cassie_utils",
        "//examples/Cassie/osc",
        "//examples/Cassie/systems:cassie_out_to_radio",
        "//examples/Cassie/systems:simulator_drift",
        "//multibody:utils",
        "//multibody:view_frame",
        "//multibody/kinematic",
        "//solvers:osqp_solver_options",
        "//systems:robot_lcm_systems",
        "//systems:system_utils",
        "//systems/controllers:fsm_event_time",
        "//systems/filters:floating_base_velocity_filter",
        "//systems/framework:lcm_driven_loop",
        "//systems/primitives",
        "@drake//:drake_shared_library",
        "@gflags",
    ],
)

cc_binary(
    name = "run_osc_standing_controller",
    srcs = ["run_osc_standing_controller.cc"],
    deps = [
        ":cassie_urdf",
        ":cassie_utils",
        "//examples/Cassie/osc",
        "//examples/Cassie/systems:cassie_out_to_radio",
        "//multibody:utils",
        "//multibody/kinematic",
        "//systems:robot_lcm_systems",
        "//systems/controllers/osc:operational_space_control",
        "//systems/framework:lcm_driven_loop",
        "//systems/primitives",
        "@drake//:drake_shared_library",
        "@gflags",
    ],
)

cc_binary(
    name = "benchmark_dynamics",
    srcs = ["test/benchmark_dynamics.cc"],
    tags = ["manual"],
    deps = [
        ":cassie_urdf",
        "//common",
        "//examples/Cassie/systems:sim_cassie_sensor_aggregator",
        "//multibody:utils",
        "//systems:robot_lcm_systems",
        "//systems/primitives",
        "@drake//:drake_shared_library",
        "@gflags",
    ],
)

cc_binary(
    name = "run_dircon_squatting",
    srcs = ["run_dircon_squatting.cc"],
    data = glob(["examples/Cassie/urdf/cassie_fixed_springs.urdf"]),
    deps = [
        ":cassie_fixed_point_solver",
        ":cassie_utils",
        "//common",
        "//lcm:dircon_trajectory_saver",
        "//multibody:visualization_utils",
        "//multibody/kinematic",
        "//solvers:optimization_utils",
        "//systems/primitives",
        "//systems/trajectory_optimization:dircon",
        "//systems/trajectory_optimization/dircon",
        "@drake//:drake_shared_library",
        "@gflags",
    ],
)

cc_binary(
    name = "run_dircon_jumping",
    srcs = ["run_dircon_jumping.cc"],
    data = glob(["examples/Cassie/urdf/cassie_fixed_springs.urdf"]),
    deps = [
        ":cassie_utils",
        "//common",
        "//lcm:dircon_trajectory_saver",
        "//lcm:lcm_trajectory_saver",
        "//multibody:visualization_utils",
        "//solvers:nonlinear_cost",
        "//solvers:optimization_utils",
        "//systems/primitives",
        "//systems/trajectory_optimization:dircon",
        "@drake//:drake_shared_library",
        "@gflags",
    ],
)

cc_binary(
    name = "run_dircon_walking",
    srcs = ["run_dircon_walking.cc"],
    data = glob(["examples/Cassie/urdf/cassie_fixed_springs.urdf"]),
    deps = [
        ":cassie_utils",
        "//common",
        "//lcm:dircon_trajectory_saver",
        "//multibody:visualization_utils",
        "//solvers:optimization_utils",
        "//systems/primitives",
        "//systems/trajectory_optimization:dircon",
        "@drake//:drake_shared_library",
        "@gflags",
    ],
)

cc_binary(
    name = "run_controller_switch",
    srcs = ["run_controller_switch.cc"],
    deps = [
        "//systems/framework:lcm_driven_loop",
        "//systems/framework:vector",
        "@drake//:drake_shared_library",
        "@gflags",
    ],
)

cc_binary(
    name = "visualize_trajectory",
    srcs = ["visualize_trajectory.cc"],
    deps = [
        ":cassie_utils",
        "//lcm:dircon_trajectory_saver",
        "//lcm:lcm_trajectory_saver",
        "//multibody:multipose_visualizer",
        "//multibody:visualization_utils",
        "@drake//:drake_shared_library",
        "@gflags",
    ],
)

py_binary(
    name = "publish_pd",
    srcs = ["procman/publish_pd.py"],
    deps = [
        "//lcmtypes:lcmtypes_robot_py",
        "@lcm//:lcm-python",
    ],
)

py_binary(
    name = "cassie_virtual_remote_py",
    srcs = ["cassie_virtual_remote.py"],
    data = [
        "@lcm//:lcm-python",
    ],
    main = "cassie_virtual_remote.py",
    deps = [
        "//lcmtypes:lcmtypes_robot_py",
    ],
)

py_binary(
    name = "cassie_xbox_remote_py",
    srcs = ["cassie_xbox_remote.py"],
    data = [
        "@lcm//:lcm-python",
    ],
    main = "cassie_xbox_remote.py",
    deps = [
        "//lcmtypes:lcmtypes_robot_py",
    ],
)

load("@drake//tools/skylark:drake_runfiles_binary.bzl", "drake_runfiles_binary")

drake_runfiles_binary(
    name = "cassie_virtual_remote",
    target = "cassie_virtual_remote_py",
)

drake_runfiles_binary(
    name = "cassie_xbox_remote",
    target = "cassie_xbox_remote_py",
)
