package(default_visibility = ["//visibility:public"])

cc_library(
    name = "franka_systems",
    srcs = [],
    deps = [
        ":end_effector_force_trajectory",
        ":end_effector_orientation",
        ":end_effector_trajectory",
        ":franka_kinematics",
        ":plate_balancing_target",
        ":c3_state_sender",
        ":c3_trajectory_generator",
    ],
)

cc_library(
    name = "end_effector_trajectory",
    srcs = ["end_effector_trajectory.cc"],
    hdrs = ["end_effector_trajectory.h"],
    deps = [
        "//lcmtypes:lcmt_robot",
        "//multibody:utils",
        "//systems/framework:vector",
        "@drake//:drake_shared_library",
        "@lcm",
    ],
)

cc_library(
    name = "end_effector_force_trajectory",
    srcs = ["end_effector_force_trajectory.cc"],
    hdrs = ["end_effector_force_trajectory.h"],
    deps = [
        "//lcmtypes:lcmt_robot",
        "//multibody:utils",
        "//systems/framework:vector",
        "@drake//:drake_shared_library",
        "@lcm",
    ],
)

cc_library(
    name = "end_effector_orientation",
    srcs = ["end_effector_orientation.cc"],
    hdrs = ["end_effector_orientation.h"],
    deps = [
        "//lcmtypes:lcmt_robot",
        "//multibody:utils",
        "//systems/framework:vector",
        "@drake//:drake_shared_library",
        "@lcm",
    ],
)

cc_library(
    name = "plate_balancing_target",
    srcs = ["plate_balancing_target.cc"],
    hdrs = ["plate_balancing_target.h"],
    deps = [
        "//lcmtypes:lcmt_robot",
        "//multibody:utils",
        "//systems/framework:vector",
        "@drake//:drake_shared_library",
        "@lcm",
    ],
)

cc_library(
    name = "c3_trajectory_generator",
    srcs = [
        "c3_trajectory_generator.cc",
    ],
    hdrs = [
        "c3_trajectory_generator.h",
    ],
    deps = [
        ":franka_kinematics",
        "//common:find_resource",
        "//lcm:lcm_trajectory_saver",
        "//lcmtypes:lcmt_robot",
        "//multibody:utils",
        "//solvers:c3",
        "//solvers:c3_output",
        "//solvers:solver_options_io",
        "//systems/framework:vector",
        "@drake//:drake_shared_library",
    ],
)

cc_library(
    name = "c3_state_sender",
    srcs = [
        "c3_state_sender.cc",
    ],
    hdrs = [
        "c3_state_sender.h",
    ],
    deps = [
        "//lcmtypes:lcmt_robot",
        "//systems/framework:vector",
        "@drake//:drake_shared_library",
    ],
)

cc_library(
    name = "franka_kinematics",
    srcs = ["franka_kinematics.cc"],
    hdrs = ["franka_kinematics.h"],
    deps = [
        ":franka_kinematics_vector",
        "//common",
        "//lcmtypes:lcmt_robot",
        "//multibody:utils",
        "//systems/primitives",
        "@drake//:drake_shared_library",
    ],
)

cc_library(
    name = "franka_sim_controls",
    srcs = ["franka_sim_controls.cc"],
    hdrs = ["franka_sim_controls.h"],
    deps = [
        ":franka_kinematics_vector",
        "//common",
        "//lcmtypes:lcmt_robot",
        "//multibody:utils",
        "//systems/primitives",
        "@drake//:drake_shared_library",
    ],
)

cc_library(
    name = "franka_kinematics_vector",
    srcs = ["franka_kinematics_vector.cc"],
    hdrs = ["franka_kinematics_vector.h"],
    deps = [
        "//common",
        "//multibody:utils",
        "//systems/primitives",
        "@drake//:drake_shared_library",
    ],
)
