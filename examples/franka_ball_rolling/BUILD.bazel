# -*- mode: python -*-
# vi: set ft=python :

package(default_visibility = ["//visibility:public"])

cc_library(
    name = "ball_rolling_urdf",
    data = glob([
    	"robot_properties/urdf/**"])
)

## parameters library ##
cc_library(
    name = "trajectory_params",
    hdrs = ["parameters/trajectory_params.h"],
    data = [
        "parameters/trajectory_params.yaml",
    ],
    deps = [
        "@drake//:drake_shared_library",
    ],
)

cc_library(
    name = "heuristic_planner_params",
    hdrs = ["parameters/heuristic_planner_params.h"],
    data = [
        "parameters/heuristic_planner_params.yaml",
    ],
    deps = [
        "@drake//:drake_shared_library",
    ],
)

cc_library(
    name = "simulate_franka_params",
    hdrs = ["parameters/simulate_franka_params.h"],
    data = [
        "parameters/simulate_franka_params.yaml",
    ],
    deps = [
        "@drake//:drake_shared_library",
    ],
)

cc_library(
    name = "impedance_controller_params",
    hdrs = ["parameters/impedance_controller_params.h"],
    data = [
        "parameters/impedance_controller_params.yaml",
    ],
    deps = [
        "@drake//:drake_shared_library",
    ],
)

cc_library(
    name = "state_estimator_params",
    hdrs = ["parameters/state_estimator_params.h"],
    data = [
        "parameters/state_estimator_params.yaml",
    ],
    deps = [
        "@drake//:drake_shared_library",
    ],
)

cc_library(
    name = "lcm_channels_params",
    hdrs = ["parameters/lcm_channels_params.h"],
    data = [
        "parameters/lcm_channels_sim_params.yaml",
    ],
    deps = [
        "@drake//:drake_shared_library",
    ],
)

## lcm controller and system library (_cleanup for final verision and framework)##
cc_binary(
    name = "lcm_move_to_initial",
    srcs = ["lcm_move_to_initial.cc"],
    deps = [
        "//systems:robot_lcm_systems",
        "//examples/franka_ball_rolling/systems:c3_ball_rolling_systems",
        "//systems/framework:lcm_driven_loop",
        "//examples/franka_ball_rolling:simulate_franka_params",
        "//examples/franka_ball_rolling:heuristic_planner_params",
        "//examples/franka_ball_rolling:trajectory_params",
        "//examples/franka_ball_rolling:lcm_channels_params",
        "@drake//:drake_shared_library",
        "@gflags",
    ],
)

cc_binary(
    name = "lcm_c3_ball_rolling",
    srcs = ["lcm_c3_ball_rolling.cc"],
    deps = [
        "//systems:robot_lcm_systems",
        "//systems/framework:lcm_driven_loop",
        "//examples/franka_ball_rolling/systems:franka_kinematics",
        "//examples/franka_ball_rolling/systems:c3_ball_rolling_systems",
        "//examples/franka_ball_rolling:simulate_franka_params",
        "//examples/franka_ball_rolling:trajectory_params",
        "//examples/franka_ball_rolling:heuristic_planner_params",
        "//examples/franka_ball_rolling:lcm_channels_params",
        "//systems:system_utils",
        "@drake//:drake_shared_library",
        "@gflags",
    ],
    data = ["@drake//manipulation/models/franka_description:models"],
)

cc_binary(
    name = "lcm_simulate_franka",
    srcs = ["lcm_simulate_franka.cc"],
    deps = [
        "//systems:robot_lcm_systems",
        "//systems:system_utils",
        "//systems/framework:lcm_driven_loop",
        "//examples/franka_ball_rolling:simulate_franka_params",
        "//examples/franka_ball_rolling:lcm_channels_params",
        "//examples/franka_ball_rolling:trajectory_params",
        "//common",
        "@drake//:drake_shared_library",
        "@gflags",
    ],
    data = ["@drake//manipulation/models/franka_description:models"],
)

cc_binary(
    name = "lcm_impedance_controller",
    srcs = ["lcm_impedance_controller.cc"],
    deps = [
        "//systems:robot_lcm_systems",
        "//systems/framework:lcm_driven_loop",
        "//examples/franka_ball_rolling/systems:c3_ball_rolling_systems",
        "//examples/franka_ball_rolling:impedance_controller_params",
        "//examples/franka_ball_rolling:lcm_channels_params",
        "//systems:system_utils",
        "@drake//:drake_shared_library",
        "@gflags",
    ],
)

cc_binary(
  name = "lcm_state_estimator",
  srcs = ["lcm_state_estimator.cc"],
  deps = ["//examples/franka_ball_rolling/systems:c3_ball_rolling_systems",
          "//examples/franka_ball_rolling:state_estimator_params",
          "//examples/franka_ball_rolling:lcm_channels_params",
          "//systems:robot_lcm_systems",
          "//systems:system_utils",
          "//systems/framework:lcm_driven_loop",
          "@drake//:drake_shared_library",
          "@gflags"
  ],
)

cc_binary(
    name = "lcm_plant_visualizer",
    srcs = ["lcm_plant_visualizer.cc"],
    data = [
        "ball_rolling_urdf",
        "@drake//manipulation/models/franka_description:models",
#        "@drake_models//:franka_description",
    ],
    deps = [
#        ":parameters",
        "//examples/franka_ball_rolling:simulate_franka_params",
        "//examples/franka_ball_rolling:lcm_channels_params",
        "//common",
        "//multibody:utils",
        "//multibody:visualization_utils",
        "//systems:robot_lcm_systems",
        "//systems:system_utils",
        "//systems/primitives",
        "//systems/trajectory_optimization:lcm_trajectory_systems",
        "//systems/visualization:lcm_visualization_systems",
        "@drake//:drake_shared_library",
        "@gflags",
    ],
)