 group "1.director" {
    cmd "drake-director" {
        exec = "bazel-bin/director/drake-director --script director/scripts/VisualizationGUI.py";
        host = "localhost";
    }
}

group "2.[SIM] New Blocks Test" {
    cmd "a.[SIM] c3 ball rolling planner" {
        exec = "bazel-bin/examples/franka_ball_rolling/lcm_c3_ball_rolling --TTL 0";
        host = "localhost";
    }
    cmd "b.[SIM] move to initial" {
        exec = "bazel-bin/examples/franka_ball_rolling/lcm_move_to_initial --TTL 0";
        host = "localhost";
    }
    cmd "c.[SIM] franka" {
        exec = "bazel-bin/examples/franka_ball_rolling/lcm_simulate_franka";
        host = "localhost";
    }
    cmd "d.[SIM] impedance controller" {
        exec = "bazel-bin/examples/franka_ball_rolling/lcm_impedance_controller";
        host = "localhost";
    }
    cmd "e.[SIM]run_state_estimator" {
        exec = "bazel-bin/examples/franka_ball_rolling/lcm_state_estimator";
        host = "localhost";
    }
    cmd "f.[SIM] visualizer" {
        exec = "bazel-bin/examples/franka_ball_rolling/lcm_plant_visualizer";
        host = "localhost";
    }
}

group "3.[SIM] New Blocks Test Valgrind" {
    cmd "a.[SIM] c3 ball rolling planner" {
        exec = "valgrind --leak-check=yes bazel-bin/examples/franka_ball_rolling/lcm_c3_ball_rolling --TTL 0";
        host = "localhost";
    }
    cmd "b.[SIM] move to initial" {
        exec = "valgrind --leak-check=yes bazel-bin/examples/franka_ball_rolling/lcm_move_to_initial --TTL 0";
        host = "localhost";
    }
    cmd "c.[SIM] franka" {
        exec = "bazel-bin/examples/franka_ball_rolling/lcm_simulate_franka";
        host = "localhost";
    }
    cmd "d.[SIM] impedance controller" {
        exec = "bazel-bin/examples/franka_ball_rolling/lcm_impedance_controller";
        host = "localhost";
    }
    cmd "e.[SIM]run_state_estimator" {
        exec = "bazel-bin/examples/franka_ball_rolling/lcm_state_estimator";
        host = "localhost";
    }
}


group "4. lcm spy" {
    cmd "a.[SIM] LCM SPY" {
        exec = "bazel-bin/lcmtypes/dair-lcm-spy";
        host = "localhost";
    }
}

group "5.Logging, Utils" {
    cmd "a.start_logging" {
        exec = "bazel-bin/examples/franka_trajectory_following/scripts/start_logging";
        host = "localhost";
    }
    cmd "b.start_filming" {
        exec = "python examples/franka_trajectory_following/scripts/start_filming.py";
        host = "localhost";
    }
    cmd "c.process_logs" {
        exec = "bazel-bin/bindings/pydairlib/analysis/log_plotter_franka";
        host = "localhost";
    }
    cmd "d.process_frames" {
        exec = "bazel-bin/examples/franka_trajectory_following/scripts/process_frames";
        host = "localhost";
    }
    cmd "e.update_urdf" {
        exec = "bazel-bin/examples/franka_trajectory_following/scripts/update_urdfs";
        host = "localhost";
    }
}