load("@drake//tools/lint:lint.bzl", "add_lint_tests")

package(default_visibility = ["//visibility:public"])

cc_library(
    name = "c3_ball_rolling_systems",
    srcs = [
        "move_to_initial.cc",
        "track_target_generator.cc",
        "heuristic_generator.cc",
        "control_refine_sender.cc",
        "gravity_compensator.cc",
        "c3_state_estimator.cc",
        "c3_state_sender.cc"
    ],
    hdrs = [
        "move_to_initial.h",
        "track_target_generator.h",
        "heuristic_generator.h",
        "control_refine_sender.h",
        "gravity_compensator.h",
        "c3_state_estimator.h",
        "c3_state_sender.h"
    ],
    deps = [
        "//systems/framework:vector",
        "@drake//:drake_shared_library",
        "@lcm",
        "franka_kinematics",
        "//multibody:utils",
        "//lcmtypes:lcmt_robot",
        "//multibody:geom_geom_collider",
        "//multibody/kinematic:kinematic",
        "//solvers:lcs",
        "//solvers:c3",
        "//solvers:c3_output",
        "//examples/franka_ball_rolling:trajectory_params",
        "//examples/franka_ball_rolling:heuristic_planner_params",
        "//examples/franka_ball_rolling:c3_parameters",
        "//examples/franka_ball_rolling:simulate_franka_params",
        "//examples/franka_ball_rolling:c3_state_estimator_params",
    ],
)

cc_library(
    name = "franka_kinematics",
    srcs = ["franka_kinematics.cc"],
    hdrs = ["franka_kinematics.h"],
    deps = [
        ":franka_kinematics_vector",
        "//common",
        "//lcmtypes:lcmt_robot",
        "//multibody:utils",
        "//systems/primitives",
        "@drake//:drake_shared_library",
        "//examples/franka_ball_rolling:simulate_franka_params",
    ],
)

cc_library(
    name = "franka_kinematics_vector",
    srcs = ["franka_kinematics_vector.cc"],
    hdrs = ["franka_kinematics_vector.h"],
    deps = [
        "//common",
        "//multibody:utils",
        "//systems/primitives",
        "@drake//:drake_shared_library",
    ],
)