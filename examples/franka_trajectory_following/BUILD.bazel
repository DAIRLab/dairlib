# -*- mode: python -*-
# vi: set ft=python :

package(default_visibility = ["//visibility:public"])

cc_library(
    name = "trifinger_urdf",
    data = glob([
    	"robot_properties_fingers/urdf/**",
    	"robot_properties_fingers/urdf/pro/**",
    	"robot_properties_fingers/urdf/edu/**",
    	"robot_properties_fingers/meshes/**",
    	"robot_properties_fingers/meshes/pro/**",
    	"robot_properties_fingers/meshes/pro/detailed/**",
    	"robot_properties_fingers/meshes/edu/**",
        "robot_properties_fingers/cube/**"])
)

cc_library(
    name = "c3_parameters",
    hdrs = ["c3_parameters.h"],
    deps = [
        "@drake//:drake_shared_library",
    ],
)

cc_binary(
    name = "simulate_franka_lcm_cc",
    srcs = ["simulate_franka_lcm.cc"],
    deps = [
        "//systems:robot_lcm_systems",
        "//systems/controllers",
        "//systems/framework:lcm_driven_loop",
        "//examples/franka_trajectory_following:c3_parameters",
        "//systems:system_utils",
        "@drake//:drake_shared_library",
    ],
    data = [":trifinger_urdf",
            "@drake//manipulation/models/franka_description:models"]
)

cc_binary(
    name = "lcm_control_impedence_cc",
    srcs = ["lcm_control_impedance.cc"],
    deps = [
        "//systems:robot_lcm_systems",
        "//systems/controllers",
        "//systems/framework:lcm_driven_loop",
        "//systems/controllers:impedance_controller",
        "//examples/franka_trajectory_following:c3_parameters",
        # "//systems/ros:ros_pubsub_systems",
        # "//systems/ros:c3_ros_conversions",
        "//examples/franka_trajectory_following/systems:gravity_compensator",
        "//systems:system_utils",
        "@drake//:drake_shared_library",
    ],
    data = [":trifinger_urdf",
            "@drake//manipulation/models/franka_description:models"]
)

cc_binary(
    name = "lcm_control_demo_cc",
    srcs = ["lcm_control_demo.cc"],
    deps = [
        "//systems:robot_lcm_systems",
        "//systems/controllers",
        "//systems/framework:lcm_driven_loop",
        "//systems/controllers:c3_controller_franka",
        "//examples/franka_trajectory_following:c3_parameters",
        "//systems:system_utils",
        "@drake//:drake_shared_library",
    ],
    data = [":trifinger_urdf",
            "@drake//manipulation/models/franka_description:models"]
)

cc_binary(
    name = "visualizer",
    srcs = ["visualizer.cc"],
    deps = [
        "//multibody:utils",
        "//multibody:visualization_utils",
        "//systems:robot_lcm_systems",
        "//examples/franka_trajectory_following:c3_parameters",
        "//systems/primitives",
        "//systems:system_utils",
        "@drake//:drake_shared_library",
        "@gflags",
    ],
    data = [":trifinger_urdf",
        "@drake//manipulation/models/franka_description:models"]
)

py_binary(
    name = "simulate_franka_lcm",
    srcs = ["simulate_franka_lcm.py"],
    deps = [
        "//bindings/pydairlib",
        "@drake//bindings/pydrake",
    ],
    data = [":trifinger_urdf",
            "@drake//manipulation/models/franka_description:models"],
)

py_binary(
    name = "lcm_control_impedence",
    srcs = ["lcm_control_impedence.py"],
    deps = [
        "//bindings/pydairlib",
        "@drake//bindings/pydrake",
    ],
    data = [":trifinger_urdf",
            "@drake//manipulation/models/franka_description:models"],
)

py_binary(
    name = "lcm_control_demo",
    srcs = ["lcm_control_demo.py"],
    deps = [
        "//bindings/pydairlib",
        "@drake//bindings/pydrake",
    ],
    data = [":trifinger_urdf",
            "@drake//manipulation/models/franka_description:models"],
)