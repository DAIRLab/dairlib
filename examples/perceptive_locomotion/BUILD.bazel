load("@drake//tools/lint:lint.bzl", "add_lint_tests")

package(default_visibility = ["//visibility:public"])

cc_binary(
    name = "run_alip_minlp_controller",
    srcs = ["run_alip_minlp_controller.cc"],
    local_defines = select(
        {
            "//tools/workspace/ros:dair_ros_off": [],
            "//tools/workspace/ros:dair_ros_on": ["DAIR_ROS_ON"],
        },
    ),
    deps = [
        "//examples/Cassie:cassie_utils",
        "//examples/Cassie/osc",
        "//examples/Cassie/systems:cassie_out_to_radio",
        "//examples/perceptive_locomotion/gains:alip_minlp_gains",
        "//geometry:convex_foothold",
        "//lcmtypes:lcmt_robot",
        "//systems:robot_lcm_systems",
        "//systems:system_utils",
        "//systems/filters:floating_base_velocity_filter",
        "//systems/controllers/footstep_planning:alip_minlp_footstep_controller",
        "//systems/controllers/footstep_planning:flat_terrain_foothold_source",
        "//systems/controllers/footstep_planning:footstep_lcm_systems",
        "//systems/framework:lcm_driven_loop",
        "//systems/primitives:fsm_lcm_systems",
        "@drake//:drake_shared_library",
        "@gflags",
    ] + select(
        {
            "//tools/workspace/ros:dair_ros_on": [
                "//geometry:convex_foothold_receiver",
                "//systems/ros:dairlib_ros",
            ],
            "//tools/workspace/ros:dair_ros_off": [],
        },
    ),
)

cc_binary(
    name = "run_alip_deadbeat_controller",
    srcs = ["run_alip_deadbeat_controller.cc"],
    local_defines = select(
        {
            "//tools/workspace/ros:dair_ros_off": [],
            "//tools/workspace/ros:dair_ros_on": ["DAIR_ROS_ON"],
        },
    ),
    deps = [
        "//examples/Cassie:cassie_utils",
        "//examples/Cassie/osc",
        "//examples/Cassie/systems:cassie_out_to_radio",
        "//examples/perceptive_locomotion/gains:alip_minlp_gains",
        "//geometry:convex_foothold",
        "//lcmtypes:lcmt_robot",
        "//systems:robot_lcm_systems",
        "//systems:system_utils",
        "//systems/controllers/footstep_planning:alip_deadbeat_footstep_controller",
        "//systems/controllers/footstep_planning:flat_terrain_foothold_source",
        "//systems/controllers/footstep_planning:footstep_lcm_systems",
        "//systems/framework:lcm_driven_loop",
        "//systems/primitives:fsm_lcm_systems",
        "@drake//:drake_shared_library",
        "@gflags",
    ] + select(
        {
            "//tools/workspace/ros:dair_ros_on": [
                "//geometry:convex_foothold_receiver",
                "//systems/ros:dairlib_ros",
            ],
            "//tools/workspace/ros:dair_ros_off": [],
        },
    ),
)

cc_binary(
    name = "run_osc_for_alip_minlp_controller",
    srcs = ["run_osc_for_alip_minlp_controller.cc"],
    deps = [
        "//examples/Cassie:cassie_urdf",
        "//examples/Cassie:cassie_utils",
        "//examples/Cassie/osc",
        "//examples/Cassie/systems:cassie_out_to_radio",
        "//examples/Cassie/systems:simulator_drift",
        "//examples/perceptive_locomotion/gains:alip_minlp_gains",
        "//examples/perceptive_locomotion/systems:alip_input_receiver",
        "//multibody:utils",
        "//multibody:view_frame",
        "//multibody/kinematic",
        "//solvers:osqp_solver_options",
        "//systems:robot_lcm_systems",
        "//systems:system_utils",
        "//systems/controllers:lcm_trajectory_receiver",
        "//systems/controllers/footstep_planning:alip_mpc_interface_system",
        "//systems/controllers/footstep_planning:footstep_lcm_systems",
        "//systems/framework:lcm_driven_loop",
        "//systems/primitives",
        "//systems/primitives:fsm_lcm_systems",
        "@drake//:drake_shared_library",
        "@gflags",
    ],
)

cc_binary(
    name = "multibody_sim_hiking",
    srcs = ["multibody_sim_hiking.cc"],
    local_defines = select(
        {
            "//tools/workspace/ros:dair_ros_off": [],
            "//tools/workspace/ros:dair_ros_on": ["DAIR_ROS_ON"],
        },
    ),
    deps = [
        "//examples/Cassie:cassie_fixed_point_solver",
        "//examples/Cassie:cassie_urdf",
        "//examples/Cassie:cassie_utils",
        "//examples/Cassie/systems:cassie_encoder",
        "//multibody:utils",
        "//solvers:optimization_utils",
        "//systems:robot_lcm_systems",
        "//systems:system_utils",
        "//systems/framework:vector",
        "//systems/primitives",
        "//systems/cameras:camera_utils",
        "@drake//:drake_shared_library",
        "@gflags",
    ] + select(
        {
            "//tools/workspace/ros:dair_ros_on": [
                "//systems/cameras:drake_to_ros_pointcloud",
                "//systems/ros:dairlib_ros",
            ],
            "//tools/workspace/ros:dair_ros_off": [],
        },
    ),
)

cc_binary(
    name = "run_controller_switch",
    srcs = ["run_controller_switch.cc"],
    deps = [
        "//lcmtypes:lcmt_robot",
        "@drake//:drake_shared_library",
        "@gflags",
    ],
)

cc_binary(
    name = "mpc_visualizer",
    srcs = ["mpc_visualizer.cc"],
    deps = [
        ":meshcat_foothold_visualizer",
        "//examples/Cassie:cassie_urdf",
        "//examples/Cassie:cassie_utils",
        "//lcmtypes:lcmt_robot",
        "//multibody:utils",
        "//multibody:visualization_utils",
        "//systems:robot_lcm_systems",
        "//systems/primitives",
        "@drake//:drake_shared_library",
        "@gflags",
    ],
)

cc_library(
    name = "meshcat_foothold_visualizer",
    srcs = ["meshcat_foothold_visualizer.cc"],
    hdrs = ["meshcat_foothold_visualizer.h"],
    deps = [
        "//geometry:convex_foothold_set",
        "//lcmtypes:lcmt_robot",
        "@drake//:drake_shared_library",
    ],
)
