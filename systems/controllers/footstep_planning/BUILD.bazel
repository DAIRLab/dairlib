load("@drake//tools/lint:lint.bzl", "add_lint_tests")

package(default_visibility = ["//visibility:public"])

cc_library(
    name = "alip_s2s_planner",
    srcs = ["alip_s2s_planner.cc"],
    hdrs = ["alip_s2s_planner.h"],
    deps = [
        ":alip_utils",
        "//geometry:convex_foothold",
        "//multibody:utils",
        "//systems/controllers:control_utils",
        "//systems/filters:s2s_kalman_filter",
        "//systems/framework:vector",
        "@drake//:drake_shared_library",
    ],
)

cc_library(
    name = "alip_minlp_footstep_controller",
    srcs = ["alip_minlp_footstep_controller.cc"],
    hdrs = ["alip_minlp_footstep_controller.h"],
    deps = [
        ":alip_minlp",
        ":alip_utils",
        "//geometry:convex_foothold",
        "//lcmtypes:lcmt_robot",
        "@drake//:drake_shared_library"
    ],
)

cc_library(
    name = "alip_nlp",
    srcs = ["alip_nlp.cc"],
    hdrs = ["alip_nlp.h"],
    deps = [
        ":alip_utils",
        "//geometry:convex_foothold",
        "//solvers:constraints",
        "@drake//:drake_shared_library"
    ],
)

cc_library(
    name = "alip_minlp",
    srcs = ["alip_minlp.cc"],
    hdrs = ["alip_minlp.h"],
    deps = [
        ":alip_utils",
        "//geometry:convex_foothold",
        "//solvers:constraints",
        "@drake//:drake_shared_library"
    ],
)

cc_library(
    name = "alip_utils",
    srcs = ["alip_utils.cc"],
    hdrs = ["alip_utils.h"],
    deps = [
        "//multibody:utils",
        "@drake//:drake_shared_library",
    ],
)
